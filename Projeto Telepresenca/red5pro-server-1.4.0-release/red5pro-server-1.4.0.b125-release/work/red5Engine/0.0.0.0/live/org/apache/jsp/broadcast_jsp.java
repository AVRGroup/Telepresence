/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.5
 * Generated at: 2016-11-23 15:07:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.Inet4Address;
import com.red5pro.server.secondscreen.net.NetworkUtil;
import java.io.*;
import java.util.regex.*;
import java.net.URL;
import java.nio.charset.Charset;

public final class broadcast_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util.regex");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.red5pro.server.secondscreen.net.NetworkUtil");
    _jspx_imports_classes.add("java.nio.charset.Charset");
    _jspx_imports_classes.add("java.net.URL");
    _jspx_imports_classes.add("java.net.Inet4Address");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

  String cookieStr = "";
  String cookieName = "storedIpAddress";
  Pattern addressPattern = Pattern.compile("^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$");

  String ip = null;
  String localIp = NetworkUtil.getLocalIpAddress();
  boolean ipExists = false;

  // Flip localIp to null if unknown.
  localIp = addressPattern.matcher(localIp).find() ? localIp : null;

  // First check if provided as a query parameter...
  if(request.getParameter("host") != null) {
    ip = request.getParameter("host");
    ip = addressPattern.matcher(ip).find() ? ip : null;
  }

  Cookie cookie;
  Cookie[] cookies = request.getCookies();

  // If we have stored cookies check if already stored ip address by User.
  if(ip == null && cookies != null) {
    for(int i = 0; i < cookies.length; i++) {
      cookie = cookies[i];
      cookieStr += cookie.getName() + "=" + cookie.getValue() + "; ";
      if(cookie.getName().equals(cookieName)) {
        ip = cookie.getValue();
        ip = addressPattern.matcher(ip).find() ? ip : null;
        break;
      }
    }
  }

  // Is a valid IP address from stored IP by User:
  if(ip == null) {

    ip = localIp;

    if(ip != null && addressPattern.matcher(ip).find()) {
      // The IP returned from NetworkUtils is valid...
    }
    else {

      // Invoke AWS service
      URL whatismyip = new URL("http://checkip.amazonaws.com");
      BufferedReader in = null;
      try {
        in = new BufferedReader(new InputStreamReader(whatismyip.openStream()));
        ip = in.readLine();
      }
      catch(Exception e) {
        ip = null;
      }
      finally {
        if (in != null) {
          try {
            in.close();
          }
          catch (IOException e) {
            e.printStackTrace();
          }
        }
      }

      // If failure in AWS service and/or IP still null => flag to show alert.
    }

  }

  ipExists = ip != null && !ip.isEmpty();

      out.write('\n');

  String host = ip;

      out.write("\n");
      out.write("<!doctype html>\n");
      out.write("<html lang=\"eng\">\n");
      out.write("  <head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <meta name=\"description\" content=\"Welcome to the Red5 Pro Server Pages!\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/main.css\">\n");
      out.write("    <link href=\"http://fonts.googleapis.com/css?family=Lato:400,700\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("    <title>Stream Broadcasting with the Red5 Pro Server!</title>\n");
      out.write("    <style>\n");
      out.write("      object:focus {\n");
      out.write("        outline:none;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      #flashContent {\n");
      out.write("        border-radius: 5px;\n");
      out.write("        background-color: #e3e3e3;\n");
      out.write("        padding: 10px;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      #live-page-subcontent {\n");
      out.write("        text-align: center;\n");
      out.write("        position: relative;\n");
      out.write("        width: 100%;\n");
      out.write("        height: 230px;\n");
      out.write("        overflow: hidden;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      #live-container {\n");
      out.write("        position: absolute;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      #live-image-container {\n");
      out.write("        width: 540px;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      #live-page-img {\n");
      out.write("        width: 100%;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .notify-callout {\n");
      out.write("        margin: 0px;\n");
      out.write("        padding: 26px 26px;\n");
      out.write("        background-color: #eeeeee\n");
      out.write("      }\n");
      out.write("    </style>\n");
      out.write("    <script type=\"text/javascript\" src=\"swf/swfobject.js\"></script>\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("      // For version detection, set to min. required Flash Player version, or 0 (or 0.0.0), for no version detection.\n");
      out.write("      var swfVersionStr = \"11.1.0\";\n");
      out.write("      // To use express install, set to playerProductInstall.swf, otherwise the empty string.\n");
      out.write("      var xiSwfUrlStr = \"swf/playerProductInstall.swf\";\n");
      out.write("      var flashvars = {\n");
      out.write("        host: \"");
      out.print( host );
      out.write("\"\n");
      out.write("      };\n");
      out.write("      var params = {};\n");
      out.write("      params.quality = \"high\";\n");
      out.write("      params.bgcolor = \"#ffffff\";\n");
      out.write("      params.allowscriptaccess = \"always\";\n");
      out.write("      params.allowfullscreen = \"true\";\n");
      out.write("      var attributes = {};\n");
      out.write("      attributes.id = \"Broadcaster\";\n");
      out.write("      attributes.name = \"Broadcaster\";\n");
      out.write("      attributes.align = \"middle\";\n");
      out.write("      if(swfobject.hasFlashPlayerVersion(\"11.1.0\")) {\n");
      out.write("        swfobject.embedSWF(\n");
      out.write("            \"Broadcaster.swf\", \"flashContent\",\n");
      out.write("            \"100%\", \"786\",\n");
      out.write("            swfVersionStr, xiSwfUrlStr,\n");
      out.write("            flashvars, params, attributes);\n");
      out.write("        // JavaScript enabled so display the flashContent div in case it is not replaced with a swf object.\n");
      out.write("        swfobject.createCSS(\"#flashContent\", \"display:block; text-align:left; padding: 0; background-color: #ffffff\");\n");
      out.write("      }\n");
      out.write("      else {\n");
      out.write("        // nada.\n");
      out.write("\n");
      out.write("      }\n");
      out.write("  </script>\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("    <div class=\"header-bar clear-fix\">\n");
      out.write("      <div id=\"header-field\" class=\"clear-fix\">\n");
      out.write("        <p class=\"left\"><a class=\"red5pro-header-link\" href=\"/\">\n");
      out.write("            <img class=\"red5pro-logo-header\" src=\"images/red5pro_logo.svg\">\n");
      out.write("        </a></p>\n");
      out.write("      </div>\n");
      out.write("      <!-- view jsp_header for details on variables used. -->\n");
      out.write("      \n");
      out.write("      <!-- Display IP Address used through the page -->\n");
      out.write("      <div id=\"ip-field\">\n");
      out.write("        ");
 if (ipExists) { 
      out.write("\n");
      out.write("          <p><span class=\"black-text\">Your server IP address is:</span>&nbsp;&nbsp;<span id=\"ip-address-field\" class=\"red-text medium-font-size\">");
      out.print( ip );
      out.write("</span></p>\n");
      out.write("        ");
 } else { 
      out.write("\n");
      out.write("          <p><span class=\"black-text\">Uh-Oh!!</span></p>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("        <p><a id=\"ip-overlay-button\" class=\"white-text\" href=\"#\">Why would I need to know the server IP address?</a></p>\n");
      out.write("        <p><a id=\"ip-incorrect-button\" class=\"black-text\" href=\"#\">Not the correct IP address?</a></p>\n");
      out.write("      </div>\n");
      out.write("      \n");
      out.write("      <!-- Overlay explaining what the IP Address is used for. -->\n");
      out.write("      <div id=\"ip-overlay\" class=\"hidden\">\n");
      out.write("        <p class=\"overlay-close-button\"><a id=\"ip-overlay-close\" href=\"#\" class=\"red-text\">Close</a></p>\n");
      out.write("        <p>This IP address needs to be provided to applications integrated with the Red5 Pro SDKs.</p>\n");
      out.write("        <p>If using the example projects from our <a id=\"header-github-link\" class=\"link\" href=\"http://github.com/red5pro\" target=\"_blank\">Github</a>, you will enter this IP into the <strong>Server</strong> input field of the Settings menu.</p>\n");
      out.write("        <hr>\n");
      out.write("        <p class=\"top-nudge\"><a id=\"ip-overlay-ip-incorrect-button\" href=\"#\" class=\"red-text\">Not the correct IP address?</a></p>\n");
      out.write("      </div>\n");
      out.write("      \n");
      out.write("      <!-- Overlay to allow User to update IP Address to be used. -->\n");
      out.write("      <div id=\"ip-address-overlay\" class=\"hidden\">\n");
      out.write("        <p class=\"overlay-close-button\"><a id=\"ip-overlay-close\" href=\"#\" class=\"red-text\">Close</a></p>\n");
      out.write("        <p class=\"black-text\" style=\"font-weight: bold\">Do you think the server IP address above is incorrect?</p>\n");
      out.write("        <div>\n");
      out.write("          <p>Select from the following suggestions:</p>\n");
      out.write("          <table id=\"ip-suggestions-table\">\n");
      out.write("            <tbody><tr><td class=\"red-text\">No suggestions.</tr></td>\n");
      out.write("          </table>\n");
      out.write("        </div>\n");
      out.write("        <hr>\n");
      out.write("        <p class=\"black-text\"> Or enter in the correct address below:</p>\n");
      out.write("        <p id=\"ip-input-error-field\" class=\"hidden red-text\">Invalid IP address.</p>\n");
      out.write("        <input id=\"ip-address-input-field\" type=\"text\">\n");
      out.write("        <button id=\"ip-address-input-submit\">submit</button>\n");
      out.write("      </div>\n");
      out.write("      <script>\n");
      out.write("      (function(window, document) {\n");
      out.write("        'use strict';\n");
      out.write("      \n");
      out.write("        // Host IP state\n");
      out.write("        var currentIp = \"");
      out.print( ip );
      out.write("\";\n");
      out.write("        var hasValidIp = ");
      out.print( ipExists );
      out.write(";\n");
      out.write("        var suggestHostIp = window.location.hostname;\n");
      out.write("        var ipAddressField = document.getElementById('ip-address-field');\n");
      out.write("        var validIpRegex = /^(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}$/gi;\n");
      out.write("      \n");
      out.write("        // IP Overlay\n");
      out.write("        var isOverlayShown = false;\n");
      out.write("        var isIpAddressOverlayShown = false;\n");
      out.write("      \n");
      out.write("        // Element References\n");
      out.write("        var ipOverlay = document.getElementById('ip-overlay');\n");
      out.write("        var ipAddressOverlay = document.getElementById('ip-address-overlay');\n");
      out.write("        var ipOverlayButton = document.getElementById('ip-overlay-button');\n");
      out.write("        var ipIncorrectButton = document.getElementById('ip-incorrect-button');\n");
      out.write("        var ipOverlayIpIncorrectButton = document.getElementById('ip-overlay-ip-incorrect-button');\n");
      out.write("        var githubLink = document.getElementById('header-github-link');\n");
      out.write("        var ipAddressInput = document.getElementById('ip-address-input-field');\n");
      out.write("        var ipAddressInputSubmit = document.getElementById('ip-address-input-submit');\n");
      out.write("        var ipAddressErrorField = document.getElementById('ip-input-error-field');\n");
      out.write("        var ipSuggestionsTable = document.getElementById('ip-suggestions-table');\n");
      out.write("      \n");
      out.write("        // Listeners to Change in IP\n");
      out.write("        var ipChangeListeners = [];\n");
      out.write("        var registerIpChangeListener = function(func, immediatelyInvoke) {\n");
      out.write("          if(immediatelyInvoke) {\n");
      out.write("            func.call(null, currentIp);\n");
      out.write("          }\n");
      out.write("          ipChangeListeners.push(func);\n");
      out.write("        };\n");
      out.write("        var unregisterIpChangeListener = function(func) {\n");
      out.write("          var i = ipChangeListeners.length;\n");
      out.write("          while(--i > -1) {\n");
      out.write("            if(ipChangeListeners[i] === func) {\n");
      out.write("              ipChangeListeners.splice(i, 1);\n");
      out.write("              break;\n");
      out.write("            }\n");
      out.write("          }\n");
      out.write("        };\n");
      out.write("        var notifyIpChangeListeners = function(newValue) {\n");
      out.write("          var i = ipChangeListeners.length;\n");
      out.write("          while(--i > -1) {\n");
      out.write("            ipChangeListeners[i].call(null, newValue);\n");
      out.write("          }\n");
      out.write("        };\n");
      out.write("        window.r5pro_registerIpChangeListener = registerIpChangeListener;\n");
      out.write("        window.r5pro_unregisterIpChangeListener = unregisterIpChangeListener;\n");
      out.write("      \n");
      out.write("        var normalizeIp = function(value) {\n");
      out.write("          var isValid = value !== null;\n");
      out.write("          isValid = isValid && value !== undefined;\n");
      out.write("          isValid = isValid && value !== \"null\";\n");
      out.write("          isValid = isValid && value !== \"undefined\";\n");
      out.write("          return isValid ? value : null;\n");
      out.write("        };\n");
      out.write("        var fillInIpSuggestions = function(currentIp) {\n");
      out.write("          var items = [];\n");
      out.write("          var localIp = normalizeIp(\"");
      out.print( localIp );
      out.write("\");\n");
      out.write("          var addIpToList = function(value) {\n");
      out.write("            if(value !== null && currentIp !== value) {\n");
      out.write("            items.push('<tr>' +\n");
      out.write("                '<td>' +\n");
      out.write("                  '<a class=\"red-text ip-suggestion-link\" href=\"#\">' +\n");
      out.write("                    value +\n");
      out.write("                  '</a>' +\n");
      out.write("                '</td>' +\n");
      out.write("              '</tr>');\n");
      out.write("            }\n");
      out.write("          };\n");
      out.write("          addIpToList(localIp);\n");
      out.write("          addIpToList(suggestHostIp);\n");
      out.write("          if(items.length > 0) {\n");
      out.write("            ipSuggestionsTable.innerHTML = items.join('');\n");
      out.write("          }\n");
      out.write("        }\n");
      out.write("        var updateAndStoreUserEnteredIpAddress = function(value) {\n");
      out.write("          var expiry = 60*60*24;\n");
      out.write("          if(ipAddressField.hasOwnProperty('innerText')) {\n");
      out.write("            ipAddressField.innerText = value;\n");
      out.write("          }\n");
      out.write("          else {\n");
      out.write("            ipAddressField.textContent = value;\n");
      out.write("          }\n");
      out.write("          document.cookie = '");
      out.print( cookieName );
      out.write("=' + value + '; path=/; max-age=' + expiry;\n");
      out.write("          currentIp = value;\n");
      out.write("          notifyIpChangeListeners(value);\n");
      out.write("        };\n");
      out.write("      \n");
      out.write("        var toggleOverlay = function(event) {\n");
      out.write("          event.preventDefault();\n");
      out.write("          event.stopPropagation();\n");
      out.write("          if(!isOverlayShown) {\n");
      out.write("            showOverlay();\n");
      out.write("          }\n");
      out.write("          else {\n");
      out.write("            hideOverlay();\n");
      out.write("          }\n");
      out.write("        };\n");
      out.write("        var showOverlay = function() {\n");
      out.write("          isOverlayShown = true;\n");
      out.write("          if(isIpAddressOverlayShown) {\n");
      out.write("             hideIpAddressOverlay();\n");
      out.write("          }\n");
      out.write("          ipOverlay.classList.remove('hidden');\n");
      out.write("        };\n");
      out.write("        var hideOverlay = function() {\n");
      out.write("          isOverlayShown = false;\n");
      out.write("          ipOverlay.classList.add('hidden');\n");
      out.write("        };\n");
      out.write("        var handleOverlayClose = function(event) {\n");
      out.write("          if(event.target !== githubLink &&\n");
      out.write("              event.target !== ipOverlayIpIncorrectButton) {\n");
      out.write("            event.stopPropagation();\n");
      out.write("            event.preventDefault();\n");
      out.write("            hideOverlay();\n");
      out.write("            return false;\n");
      out.write("          }\n");
      out.write("          else if(event.target === ipOverlayIpIncorrectButton) {\n");
      out.write("            toggleIpAddressOverlay(event);\n");
      out.write("          }\n");
      out.write("          return true;\n");
      out.write("        };\n");
      out.write("      \n");
      out.write("        var toggleIpAddressOverlay = function(event) {\n");
      out.write("          event.stopPropagation();\n");
      out.write("          event.preventDefault();\n");
      out.write("          if(!isIpAddressOverlayShown) {\n");
      out.write("            showIpAddressOverlay();\n");
      out.write("          }\n");
      out.write("          else {\n");
      out.write("            hideIpAddressOverlay();\n");
      out.write("          }\n");
      out.write("          return false;\n");
      out.write("        };\n");
      out.write("        var showIpAddressOverlay = function() {\n");
      out.write("          isIpAddressOverlayShown = true;\n");
      out.write("          if(isOverlayShown) {\n");
      out.write("            hideOverlay();\n");
      out.write("          }\n");
      out.write("          ipAddressOverlay.classList.remove('hidden');\n");
      out.write("        };\n");
      out.write("        var hideIpAddressOverlay = function() {\n");
      out.write("          isIpAddressOverlayShown = false;\n");
      out.write("          ipAddressOverlay.classList.add('hidden');\n");
      out.write("          ipAddressErrorField.classList.add('hidden');\n");
      out.write("        };\n");
      out.write("        var handleIpAddressOverlayClose = function(event) {\n");
      out.write("          if(event.target !== ipAddressInput &&\n");
      out.write("              event.target !== ipAddressInputSubmit &&\n");
      out.write("              !event.target.classList.contains('ip-suggestion-link')) {\n");
      out.write("              event.preventDefault();\n");
      out.write("              event.stopPropagation();\n");
      out.write("              hideIpAddressOverlay();\n");
      out.write("              return false;\n");
      out.write("          }\n");
      out.write("          else if(event.target.classList.contains('ip-suggestion-link')) {\n");
      out.write("            var value;\n");
      out.write("            event.preventDefault();\n");
      out.write("            event.stopPropagation();\n");
      out.write("            hideIpAddressOverlay();\n");
      out.write("            if(event.target.hasOwnProperty('innerText')) {\n");
      out.write("              value = event.target.innerText;\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("              value = event.target.textContent;\n");
      out.write("            }\n");
      out.write("            updateAndStoreUserEnteredIpAddress(value);\n");
      out.write("            return false;\n");
      out.write("          }\n");
      out.write("          return true;\n");
      out.write("        };\n");
      out.write("        var handleIpAddressInputSubmit = function(event) {\n");
      out.write("          var value = ipAddressInput.value;\n");
      out.write("          event.stopPropagation();\n");
      out.write("          event.preventDefault();\n");
      out.write("          ipAddressErrorField.classList.add('hidden');\n");
      out.write("          // Removing Regex check for now.\n");
      out.write("      //      if(validIpRegex.test(value)) {\n");
      out.write("            updateAndStoreUserEnteredIpAddress(value);\n");
      out.write("            hideIpAddressOverlay();\n");
      out.write("      //      }\n");
      out.write("      //      else {\n");
      out.write("      //        ipAddressErrorField.classList.remove('hidden');\n");
      out.write("      //      }\n");
      out.write("          return false;\n");
      out.write("        };\n");
      out.write("        ipOverlayButton.addEventListener('click', toggleOverlay);\n");
      out.write("        ipOverlayButton.addEventListener('mouseover', showOverlay);\n");
      out.write("        ipOverlay.addEventListener('mousedown', handleOverlayClose);\n");
      out.write("        ipOverlay.addEventListener('touchstart', handleOverlayClose);\n");
      out.write("      \n");
      out.write("        ipIncorrectButton.addEventListener('click', toggleIpAddressOverlay);\n");
      out.write("        ipAddressInput.addEventListener('keyup', function(event) {\n");
      out.write("          if(event.keyCode === 13) {\n");
      out.write("            handleIpAddressInputSubmit(event);\n");
      out.write("          }\n");
      out.write("        });\n");
      out.write("        ipAddressInputSubmit.addEventListener('click', handleIpAddressInputSubmit);\n");
      out.write("        ipAddressOverlay.addEventListener('mousedown', handleIpAddressOverlayClose);\n");
      out.write("        ipAddressOverlay.addEventListener('touchstart', handleIpAddressOverlayClose);\n");
      out.write("      \n");
      out.write("        registerIpChangeListener(fillInIpSuggestions, true);\n");
      out.write("      \n");
      out.write("      }(this, document));\n");
      out.write("      \n");
      out.write("      </script>\n");
      out.write("      \n");
      out.write("    </div>\n");
      out.write("    <div id=\"server-version-field\" class=\"small-font-size\">\n");
      out.write("      <span class=\"black-text\">Red5 Pro Server Version</span>&nbsp;&nbsp;<span class=\"red-text\">1.4.0.b125-release</span>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"container main-container clear-fix\">\n");
      out.write("      <div id=\"menu-section\">\n");
      out.write("        <!-- view jsp_header to view variables used in this page -->\n");
      out.write("        <div class=\"menu-content\">\n");
      out.write("          <ul class=\"menu-listing\">\n");
      out.write("            <li><a class=\"red-text menu-listing-internal\" href=\"/\">Welcome</a></li>\n");
      out.write("            <li><a class=\"red-text menu-listing-internal\" href=\"/live\">Live Streaming</a></li>\n");
      out.write("              <ul class=\"menu-sublisting\">\n");
      out.write("                <li><a class=\"menu-broadcast-link red-text menu-listing-nested\" href=\"/live/broadcast.jsp?host=");
      out.print( ip );
      out.write("\">Broadcast</a></li>\n");
      out.write("                <li><a class=\"red-text menu-listing-nested\" href=\"/live/subscribe.jsp\">Subscribe</a></li>\n");
      out.write("                <li><a class=\"red-text menu-listing-nested\" href=\"/live/playback.jsp\">VOD Playback</a></li>\n");
      out.write("        <!--         <li><a class=\"red-text menu-listing-nested\" href=\"/live/twoway.jsp\">Two-Way Streaming Example</a></li> -->\n");
      out.write("              </ul>\n");
      out.write("            <li><a class=\"red-text menu-listing-internal\" href=\"/secondscreen\">Second Screen</a></li>\n");
      out.write("              <ul class=\"menu-sublisting\">\n");
      out.write("                  <li><a class=\"red-text menu-listing-nested\" href=\"/secondscreen/hosts/html\">HTML Controller</a></li>\n");
      out.write("                  <li><a class=\"red-text menu-listing-nested\" href=\"/secondscreen/hosts/gamepad\">Gamepad Controller</a></li>\n");
      out.write("                  <li><a class=\"red-text menu-listing-nested\" href=\"/secondscreen/hosts/dpad\">DPAD Controller</a></li>\n");
      out.write("              </ul>\n");
      out.write("            <li><a class=\"red-text menu-listing-internal\" href=\"/streammanager\">Stream Manager</a></li><li><a class=\"red-text menu-listing-internal\" href=\"/api\"></a></li>\n");
      out.write("          </ul>\n");
      out.write("          <ul class=\"menu-listing\">\n");
      out.write("            <li><a class=\"red-text menu-listing-external\" href=\"http://red5pro.com\" target=\"_blank\">&gt;&nbsp;Red5 Pro Site</a></li>\n");
      out.write("            <li><a class=\"red-text menu-listing-external\" href=\"http://red5pro.com/docs\" target=\"_blank\">&gt;&nbsp;Red5 Pro Docs</a></li>\n");
      out.write("            <li><a class=\"red-text menu-listing-external\" href=\"http://account.red5pro.com\" target=\"_blank\">&gt;&nbsp;Red5 Pro Accounts</a></li>\n");
      out.write("            <li><a class=\"red-text menu-listing-external\" href=\"http://github.com/red5pro\" target=\"_blank\">&gt;&nbsp;Red5 Pro Github</a></li>\n");
      out.write("          </ul>\n");
      out.write("        <hr>\n");
      out.write("          <ul class=\"menu-listing\">\n");
      out.write("            <li><a class=\"red-text menu-listing-external\" href=\"https://red5pro.zendesk.com?origin=webapps\" target=\"_blank\">Looking For Help?</a></li>\n");
      out.write("          </ul>\n");
      out.write("          <script>\n");
      out.write("            (function(window, document) {\n");
      out.write("              var className = 'menu-broadcast-link';\n");
      out.write("              function handleLiveIpChange(value) {\n");
      out.write("                var elements = document.getElementsByClassName(className);\n");
      out.write("                var length = elements ? elements.length : 0;\n");
      out.write("                var index = 0;\n");
      out.write("                for(index = 0; index < length; index++) {\n");
      out.write("                  elements[index].href = ['/live/broadcast.jsp?host', value].join('=');\n");
      out.write("                }\n");
      out.write("              }\n");
      out.write("              window.r5pro_registerIpChangeListener(handleLiveIpChange);\n");
      out.write("             }(this, document));\n");
      out.write("          </script>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("      <div id=\"content-section\">\n");
      out.write("        <div>\n");
      out.write("          <div class=\"clear-fix\">\n");
      out.write("            <p class=\"left\">\n");
      out.write("                <a class=\"red5pro-header-link\" href=\"/\">\n");
      out.write("                  <img class=\"red5pro-logo-page\" src=\"images/red5pro_logo.svg\">\n");
      out.write("               </a>\n");
      out.write("            </p>\n");
      out.write("          </div>\n");
      out.write("          <h2 class=\"tag-line\">LIVE BROADCAST FOR ANY SCREEN</h2>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"live-page-subcontent\" class=\"clear-fix\">\n");
      out.write("          <div id=\"live-image-container\">\n");
      out.write("            <img id=\"live-page-img\" src=\"images/red5pro_live_broadcast.png\">\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"content-section-story\">\n");
      out.write("          <p>To start a Broadcast session, allow device access, provide a <strong>stream name</strong>, select any additional broadcast options, then click <strong>Start Broadcast.</strong></p>\n");
      out.write("        <!-- SWFObject's dynamic embed method replaces this alternative HTML content with Flash content when enough\n");
      out.write("             JavaScript and Flash plug-in support is available. The div is initially hidden so that it doesn't show\n");
      out.write("             when JavaScript is disabled.\n");
      out.write("        -->\n");
      out.write("          <hr />\n");
      out.write("          <p class=\"notify-callout\">You can also select to <strong>Enable Recording</strong> the live stream for Video On Demand playback after the Broadcast session! To view the current Video On Demand (VOD) files on your server, visit the <a class=\"link\" href=\"playback.jsp\" target=\"_blank\">Playback</a> page.</p>\n");
      out.write("          <hr />\n");
      out.write("        <div id=\"flashContent\">\n");
      out.write("            <p>\n");
      out.write("                To view this page ensure that Adobe Flash Player version 11.1.0 or greater is installed.\n");
      out.write("            </p>\n");
      out.write("            <script type=\"text/javascript\">\n");
      out.write("                var pageHost = ((document.location.protocol == \"https:\") ? \"https://\" : \"http://\");\n");
      out.write("                document.write(\"<a href='http://www.adobe.com/go/getflashplayer'><img src='\"\n");
      out.write("                                + pageHost + \"www.adobe.com/images/shared/download_buttons/get_flash_player.gif' alt='Get Adobe Flash player' /></a>\" );\n");
      out.write("            </script>\n");
      out.write("        </div>\n");
      out.write("        <noscript>\n");
      out.write("            <object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" width=\"100%\" height=\"100%\" id=\"Broadcaster\">\n");
      out.write("                <param name=\"movie\" value=\"Broadcaster.swf\" />\n");
      out.write("                <param name=\"quality\" value=\"high\" />\n");
      out.write("                <param name=\"bgcolor\" value=\"#ffffff\" />\n");
      out.write("                <param name=\"allowScriptAccess\" value=\"sameDomain\" />\n");
      out.write("                <param name=\"allowFullScreen\" value=\"true\" />\n");
      out.write("                <!--[if !IE]>-->\n");
      out.write("                <object type=\"application/x-shockwave-flash\" data=\"Broadcaster.swf\" width=\"100%\" height=\"100%\">\n");
      out.write("                    <param name=\"quality\" value=\"high\" />\n");
      out.write("                    <param name=\"bgcolor\" value=\"#ffffff\" />\n");
      out.write("                    <param name=\"allowScriptAccess\" value=\"sameDomain\" />\n");
      out.write("                    <param name=\"allowFullScreen\" value=\"true\" />\n");
      out.write("                <!--<![endif]-->\n");
      out.write("                <!--[if gte IE 6]>-->\n");
      out.write("                    <p>\n");
      out.write("                        Either scripts and active content are not permitted to run or Adobe Flash Player version\n");
      out.write("                        11.1.0 or greater is not installed.\n");
      out.write("                    </p>\n");
      out.write("                <!--<![endif]-->\n");
      out.write("                    <a href=\"http://www.adobe.com/go/getflashplayer\">\n");
      out.write("                        <img src=\"http://www.adobe.com/images/shared/download_buttons/get_flash_player.gif\" alt=\"Get Adobe Flash Player\" />\n");
      out.write("                    </a>\n");
      out.write("                <!--[if !IE]>-->\n");
      out.write("                </object>\n");
      out.write("                <!--<![endif]-->\n");
      out.write("            </object>\n");
      out.write("          </noscript>\n");
      out.write("          <br><br>\n");
      out.write("          <p class=\"medium-font-size\"><a class=\"red-text link\" href=\"https://github.com/red5pro/red5pro-server-examples/releases/download/0.1.2/Red5Pro-Broadcaster-Client.zip\">Download</a> the source for this example.</p>\n");
      out.write("          <hr class=\"top-padded-rule\" />\n");
      out.write("          <h3><a class=\"link\" href=\"http://red5pro.com/docs/streaming/overview/\" target=\"_blank\">Streaming SDKs</a></h3>\n");
      out.write("          <p>You can download the Streaming SDKs from your <a class=\"link\" href=\"http://account.red5pro.com/download\" target=\"_blank\">Red5 Pro Accounts</a> page.</p>\n");
      out.write("          <p>Please visit the online <a class=\"link\" href=\"http://red5pro.com/docs/streaming/overview/\" target=\"_blank\">Red5 Pro Documentation</a> for further information about integrating the streaming SDKs into your own native application!</p>\n");
      out.write("          <hr class=\"top-padded-rule\" />\n");
      out.write("          <div>\n");
      out.write("            <h3>Example Native Applications</h3>\n");
      out.write("            <h4>You will need a native application integrated with the Red5 Pro SDKs installed on your favorite device in order to broadcast and consume live streams and experience Red5 Pro Second Screen.</h4>\n");
      out.write("            <p>You can find the following Open Source native application examples on our <a class=\"link\" href=\"https://github.com/red5pro\" target=\"_blank\">Github</a>:</p>\n");
      out.write("            <div class=\"menu-content\">\n");
      out.write("              <ul class=\"menu-listing application-listing\">\n");
      out.write("                <li><a class=\"red-text\" href=\"https://github.com/red5pro/red5pro-ios-app\" target=\"_blank\">&gt;&nbsp;Red5 Pro iOS Application</a></li>\n");
      out.write("                <li><a class=\"red-text\" href=\"https://github.com/red5pro/red5pro-android-app\" target=\"_blank\">&gt;&nbsp;Red5 Pro Android Application</a></li>\n");
      out.write("              </ul>\n");
      out.write("            </div>\n");
      out.write("            <p>Follow the project setup and build instructions in each project to easily create Red5 Pro native clients to begin using the above server applications!</p>\n");
      out.write("          </div>\n");
      out.write("          \n");
      out.write("          <hr class=\"top-padded-rule\" />\n");
      out.write("          <div>\n");
      out.write("            <h3>API Documentation</h3>\n");
      out.write("            <p>To find more in-depth information about Red5 Pro Server and the server and mobile SDKs, please visit <a class=\"link\" href=\"http://red5pro.com/docs/\">http://red5pro.com/docs/</a>.</p>\n");
      out.write("          </div>\n");
      out.write("          \n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("    <script>\n");
      out.write("      (function(window, document) {\n");
      out.write("\n");
      out.write("       function accessSWF() {\n");
      out.write("          return document.getElementById(\"Broadcaster\");\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function handleBroadcastIpChange(value) {\n");
      out.write("          accessSWF().resetHost(value);\n");
      out.write("        }\n");
      out.write("        window.r5pro_registerIpChangeListener(handleBroadcastIpChange);\n");
      out.write("\n");
      out.write("       }(this, document));\n");
      out.write("    </script>\n");
      out.write("    <div class=\"footer\">\n");
      out.write("      <div>\n");
      out.write("        <a id=\"footer-email\" href=\"https://red5pro.zendesk.com?origin=webapps\" target=\"_blank\">\n");
      out.write("          <span class=\"red-text email-header\">Looking for something else?</span>\n");
      out.write("          <br>\n");
      out.write("          <br>\n");
      out.write("          <span id=\"footer-email-lead\" class=\"black-text\">We're here to help!</span>      <span class=\"red-text\">Get in touch</span>\n");
      out.write("        </a>\n");
      out.write("      </div>\n");
      out.write("      <br>\n");
      out.write("      <hr>\n");
      out.write("      <p class=\"footer-copyright\">\n");
      out.write("        <span>Copyright &copy; 2015,</span>&nbsp;\n");
      out.write("            <img class=\"red5pro-logo-footer\" src=\"images/red5pro_logo.svg\">\n");
      out.write("      </p>\n");
      out.write("    </div>\n");
      out.write("   </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
